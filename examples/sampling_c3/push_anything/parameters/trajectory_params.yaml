# Trajectory generation parameters
trajectory_type: 4       # 0 to use time-based path, 1 to use adaptive path, 2 to use fixed goal, 3 to use an adaptive straight line path, 4 to use a fixed goal but with a lookahead
use_changing_final_goal: true
changing_final_goal_type: 0  # 0 to randomize goal, 1 to cycle through orientations
final_goal_time_tolerance: 45 # in seconds

# Thresholds for position and orientation for reaching a goal successfully.
position_success_threshold: 0.02
orientation_success_threshold: 0.1   # 0.1 rad = 5.7 degrees

random_goal_x_limits: [0.44, 0.52]  #0.27, 0.5]
random_goal_y_limits: [0.02, 0.25]   # 0.35]
random_goal_radius_limits: [0.5, 0.52]

resting_object_height: -0.025          # currently being used by the goal randomization code.

prevent_three_topples_for_random_goal_gen: false

# Adaptive circular path parameters
traj_radius: 0.2
x_c: 0.35
y_c: 0
lead_angle: 40
# fixed path specific parameters
# fixed_target_position: [0.4, 0.15, 0.020895222]


# #### C3 sanity checking good starting configurations ####
# fixed_target_position: [0.45, 0.2, 0.00589]    # 0) for orientation cycling
# fixed_target_orientation: [ 0, 1, 0, 0]

# fixed_target_position: [0.5, 0.2, -0.009]    # 1) slide to front
# fixed_target_orientation: [1, 0, 0, 0]

# fixed_target_position: [0.46199167, 0.18745379, -0.009]    # 2) Test case from log 13 Feb 19th. Remember to change franka sim params for this. 
# fixed_target_orientation: [-0.9327733, 0, 0, 0.36046353]

fixed_target_position: [0.48199167, 0.18745379, -0.025]    # 3) Init in hardware
fixed_target_orientation: [-0.9327733, 0, 0, 0.36046353]


#^^# C3 sanity checking good starting configurations #^^#




# only yaw
# fixed_target_orientation: [0.010604407, 0.61336935, 0.6423365, -0.45962018]
# 90 deg flip
# fixed_target_orientation: [-0.42418233, 0.33692512, 0.821965, -0.17753652]
# fixed_target_orientation: [-0.17435307, -0.34287302,  0.81921544, -0.42535298]
# fixed_target_orientation: [ 0.28876167,  0.09415564, -0.88306883,  0.35768821]
# fixed_target_orientation: [1, 0, 0, 0]
step_size: 2
# adaptive straight line path specific parameters
start_point_x: 0.45           # x coordinate of start point of straight line.           
start_point_y: 0.35           # y coordinate of start point of straight line.
end_point_x: 0.45             # x coordinate of end point of straight line.
end_point_y: -0.35            # y coordinate of end point of straight line.
####### WARNING!! Make sure that if we want to do orientation tracking and use a lookahead, the lookahead step size 
####### needs to be bigger than the orientation tracking threshold, i.e. cost_switching_threshold_distance in 
####### sampling_params.
lookahead_step_size: 0.15      # lookahead size for adaptive straight line and fixed goal with lookahead.
lookahead_angle: 5  #3.14        # lookahead angle for adaptive straight line and fixed goal with lookahead
                              # 0.785 is 45 degrees, 0.698 is 40 degrees .
angle_hysteresis: 0.4         # UNUSED IN THIS EXAMPLE.
angle_err_to_vel_factor: 0    # factor for converting an angular error to angular velocity command.
max_step_size: 0.15           # if error is smaller or equal to this max step size, the projection point is set as the next target.

# Sampling parameters
ee_goal_height: 1          # height of the end effector above the jack
# TODO: Rename this from object half width to object resting COM z height in the world frame
object_half_width: 20
# half width of the object. Make sure to match with urdf of object.